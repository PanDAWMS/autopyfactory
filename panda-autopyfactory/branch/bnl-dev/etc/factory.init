#!/bin/bash
#
#	/etc/rc.d/init.d/factory
#
# Starts the autopyfactory daemon
#
# chkconfig: 345 26 74
# description: Submit pilot jobs to grid sites. 
# processname: factory.py

### BEGIN INIT INFO
# Provides: factory.py
# Required-Start: $syslog $local_fs
# Required-Stop: $syslog $local_fs
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop autopyfactory
# Description: Submit ATLAS pilots. 
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Determine usage context (root means RPM, non-root means home directory) and set
# paths accordingly.  

if [ `id -u` = 0 ]; then
  SYSCONF=/etc/sysconfig/factory
  BINDIR=/usr/bin
  ETCDIR=/etc/apf
  PIDFILE=/var/lock/subsys/factory
else
  SYSCONF=$HOME/etc/factory.sysconfig
  BINDIR=$HOME/bin
  ETCDIR=$HOME/etc
  PIDFILE=$HOME/var/run/factory
fi

CONFFILE=$ETCDIR/factory.conf

# Source settings from sysconfig
# overriding default if present
if [ -f $SYSCONFDIR/factory ]; then
   . $SYSCONFDIR/factory
fi

RETVAL=0
#
# See how we were called.
#
check() {
	
	# Check if factory.py is executable
	test -x $BINDIR/factory.py || exit 5
}

start() {

	# Check if it is already running
	if [ ! -f $PIDFILE ]; then
		echo -n $"Starting acpi daemon: "	
	    daemon $BINDIR/factory.py --conf=$CONFFILE $OPTIONS
	    RETVAL=$?
	    [ $RETVAL -eq 0 ] && touch $PIDFILE
	    echo
	fi
	return $RETVAL
}

stop() {

	check
	
	echo -n $"Stopping acpi daemon: "
	killproc /usr/sbin/acpid
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/acpid
	echo
    return $RETVAL
}


restart() {
	stop
	start
}	

reload() {

	check
	
	trap "" SIGHUP
	action $"Reloading acpi daemon:" killall -HUP acpid
	RETVAL=$?
	return $RETVAL
}	

case "$1" in
start)
	start
	;;
stop)
	stop
	;;
reload)
	reload
	;;
force-reload)
	echo "$0: Unimplemented feature."
	RETVAL=3
	;;
restart)
	restart
	;;
condrestart)
	if [ -f /var/lock/subsys/acpid ]; then
	    restart
	fi
	;;
status)
	status acpid
	RETVAL=$?
	;;
*)
	echo $"Usage: $0 {start|stop|status|restart|condrestart|reload|force-reload}"
	RETVAL=2
esac

exit $RETVAL
