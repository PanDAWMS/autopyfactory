#!/usr/bin/python

import os
import commands
import threading
import re
import sys
import time

import getopt

NOW = int(time.time())

# --- DEFAULTS ---

STRING = "FAILED"
FORMAT = "html"
NHOURS = 1


opts, args = getopt.getopt(sys.argv[1:], "",
			  ["string=",
                           "format=",
                           "time="]
			  )	

for k,v in opts:
	if k == "--string":
		STRING = v
	if k == "--format":
		FORMAT = v
	if k == "--time":
		NHOURS = int(v)
	
STRING=STRING.replace(' ','\ ')
STRING=STRING.replace(':','\:')


class CMD(threading.Thread):
        def __init__(self, dir):
                threading.Thread.__init__(self)
                self.dir = dir

        def run(self):

		listfiles = os.listdir(self.dir)
		listfiles = [file for file in listfiles if file.endswith(".out") and NOW - os.stat('%s/%s' %(self.dir, file))[8] < NHOURS*3600 ]
		listfiles = ['%s/%s' %(self.dir, file) for file in listfiles ]
		listfiles = " ".join(listfiles)

	 	if listfiles != "":

			cmd = 'egrep -H "%s" %s' %(STRING, listfiles)
			#print cmd
			self.out = commands.getoutput(cmd)	
		else:
			self.out = ""	


threads = {}
outputs = {}

class Dir(object):
	def __init__(self, dir, date, apfqueue):
		self.dir = dir
		self.date = date
		self.apfqueue = apfqueue

	def abs(self):
		return '%s/%s/%s' %(self.dir, self.date, self.apfqueue)
	def relatve(self):
		return '%s/%s' %(self.date, self.apfqueue)


DIR = "/tmp/TESTING"
DATES = os.listdir(DIR)
dirRe = re.compile(r"(\d{4})-(\d{2})-(\d{2})?$")
DATES = [DATE for DATE in DATES if dirRe.match(DATE)]
DIRS = []
APFQUEUES = []



for DATE in DATES:
	for APFQUEUE in os.listdir(DATE):
		if APFQUEUE not in APFQUEUES:
			APFQUEUES.append(APFQUEUE)
		dir = Dir(DIR, DATE, APFQUEUE)
		DIRS.append(dir)


for DIR in DIRS:
        t = CMD(DIR.abs())
        threads[DIR] = t
        t.start()


for DIR in DIRS:
        threads[DIR].join()
        outputs[DIR] = threads[DIR].out

APFQUEUES.sort()

if FORMAT == "html":

	print ('<body>')

	for APFQUEUE in APFQUEUES:		

		for DIR in DIRS:
                   if DIR.apfqueue == APFQUEUE:
		        if outputs[DIR]:

				print ('<table border="2" frame="hsides" rules="groups" style="font-size:small" width="100%">')
				print('<tr><td bgcolor="#99FFFF">')
				print(DIR.apfqueue)
				print('<TBODY>')

		                for line in outputs[DIR].split('\n'):
					print('<tr><td>')
        	                     	#print(line)
        	                     	fields = line.split(':')
        	                     	filename = fields[0]

					link = '' + '/'.join( filename.split('/')[-3:] )

        	                     	msg = ":".join(fields[1:])

        	                     	#print('<b>%s</b> %s' %(filename, msg))
        	                     	print('<b><a href="%s">%s</a></b> %s' %(link, filename, msg))

				print('</table>')  
				print('<br>')
		                                
	print ('</body>')


#if FORMAT == "html":
#
#	print ('<body>')
#	
#	for DIR in DIRS:
#	        if outputs[DIR]:
#			print ('<table border="2" frame="hsides" rules="groups" style="font-size:small" width="100%">')
#			print('<tr><td bgcolor="#99FFFF">')
#	                print(DIR.abs())
#			print('<TBODY>')
#	
#	                for line in outputs[DIR].split('\n'):
#				print('<tr><td>')
#                             	#print(line)
#                             	fields = line.split(':')
#                             	filename = fields[0]
#                             	msg = ":".join(fields[1:])
#                             	print('<b>%s</b> %s' %(filename, msg))
#
#	      		print('</table>')  
#			print('<br>')
#	                                
#	print ('</body>')


if FORMAT == "ascii":

	for DIR in DIRS:
	        if outputs[DIR]:
	                print(DIR.abs())
	                for line in outputs[DIR].split('\n'):
	                        print(line)

